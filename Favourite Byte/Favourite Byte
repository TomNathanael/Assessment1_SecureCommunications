from binascii import unhexlify
import string

def single_byte_xor(text, key):
    if len(chr(key)) != 1:
      raise "Key exception: single_byte_xor to be one byte long"

    output = b''
    for b in text:
        output += bytes([b ^ key])

    try:
        return output.decode("utf-8")
    except:
        return "Unable to decode"

numbers = "73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d"
decoded = unhexlify(numbers)

print("Hex decode: {}\n".format(decoded))

result = {}
for i in range(256):
    result[i] = (single_byte_xor(decoded, i))

print("Flag: {}".format([s for s in result.values() if "crypto" in s]))
